// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CoordenadorAdministrativoCalcularAutomaticamenteSaldoDisponivelPorRubricaAdministrativaFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CoordenadorAdministrativoCalcularAutomaticamenteSaldoDisponivelPorRubricaAdministrativa.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
                    "Administrativa", "", ProgrammingLanguage.CSharp, new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
                            "Administrativa")))
            {
                WexProject.Test.Features.CoordenadorAdministrativoCalcularAutomaticamenteSaldoDisponivelPorRubricaAdministrativaFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "inicio planejado",
                        "inicio real",
                        "situacao"});
            table1.AddRow(new string[] {
                        "P1",
                        "03/02/14",
                        "03/02/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P2",
                        "02/01/14",
                        "02/01/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P3",
                        "01/06/14",
                        "01/06/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P4",
                        "01/07/14",
                        "01/07/14",
                        "Concluido"});
#line 7
  testRunner.Given("que existem os projetos a seguir:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "projeto",
                        "inicio",
                        "termino",
                        "qtde meses",
                        "orcamento aprovado"});
            table2.AddRow(new string[] {
                        "Fase 1",
                        "P1",
                        "03/02/14",
                        "31/03/14",
                        "2",
                        "93.802,00"});
            table2.AddRow(new string[] {
                        "Fase 2",
                        "P1",
                        "01/04/14",
                        "30/06/14",
                        "3",
                        "150.000,50"});
            table2.AddRow(new string[] {
                        "Aditivo P2",
                        "P2",
                        "02/01/14",
                        "31/12/14",
                        "12",
                        "350.000,00"});
            table2.AddRow(new string[] {
                        "Aditivo P4",
                        "P4",
                        "01/07/14",
                        "30/09/14",
                        "3",
                        "50.100,00"});
#line 13
     testRunner.And("que existem os aditivos a seguir:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "classe"});
            table3.AddRow(new string[] {
                        "Viagens",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "RH MDireta",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "RH GDC",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "Custo Fixo",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Taxa de Adm",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "FACN",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Impostos",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Apoio a Clientes",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Apoio a Clientes 2",
                        "Administrativo"});
#line 19
     testRunner.And("que existem os seguintes tipos de rubricas:", ((string)(null)), table3, "E ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.01 - Deve listar as rubricas administrativas e projetos vigentes no mes inform" +
            "ado com saldo disponivel dos meses anteriores")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _01_01_DeveListarAsRubricasAdministrativasEProjetosVigentesNoMesInformadoComSaldoDisponivelDosMesesAnteriores()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.01 - Deve listar as rubricas administrativas e projetos vigentes no mes inform" +
                    "ado com saldo disponivel dos meses anteriores", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro",
                        "Marco"});
            table4.AddRow(new string[] {
                        "Viagens",
                        "2000",
                        "",
                        "2000",
                        ""});
            table4.AddRow(new string[] {
                        "RH MDireta",
                        "45000",
                        "15000",
                        "15000",
                        "15000"});
            table4.AddRow(new string[] {
                        "Custo Fixo",
                        "30000",
                        "10000",
                        "10000",
                        "10000"});
            table4.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        "",
                        "10000",
                        ""});
            table4.AddRow(new string[] {
                        "Impostos",
                        "2500",
                        "",
                        "2500",
                        ""});
#line 35
 testRunner.Given("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table4, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table5.AddRow(new string[] {
                        "Viagens",
                        "1000",
                        "1000",
                        ""});
            table5.AddRow(new string[] {
                        "RH MDireta",
                        "20000",
                        "10000",
                        "10000"});
            table5.AddRow(new string[] {
                        "RH GDC",
                        "10000",
                        "5000",
                        "5000"});
            table5.AddRow(new string[] {
                        "Taxa de Adm",
                        "25000",
                        "12500",
                        "12500"});
            table5.AddRow(new string[] {
                        "FACN",
                        "37802",
                        "",
                        "37802"});
#line 42
 testRunner.And("que o aditivo \'Fase 1\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table5, "E ");
#line 49
testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Fevereiro\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table6.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "20000",
                        "0"});
            table6.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "2500",
                        "2500",
                        "0"});
            table6.AddRow(new string[] {
                        "Taxa de Adm",
                        "P1",
                        "12500",
                        "12500",
                        "0"});
            table6.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "10000",
                        "10000",
                        "0"});
#line 50
 testRunner.Then("os custos administrativos no mes de \'Fevereiro\' de \'2014\' devem ser encontrados:", ((string)(null)), table6, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.02 - Deve listar as rubricas administrativas e projetos vigentes no mes inform" +
            "ado quando houver despesas reais ja lancadas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _01_02_DeveListarAsRubricasAdministrativasEProjetosVigentesNoMesInformadoQuandoHouverDespesasReaisJaLancadas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.02 - Deve listar as rubricas administrativas e projetos vigentes no mes inform" +
                    "ado quando houver despesas reais ja lancadas", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table7.AddRow(new string[] {
                        "Viagens",
                        "1000",
                        "1000",
                        ""});
            table7.AddRow(new string[] {
                        "RH MDireta",
                        "20000",
                        "10000",
                        "10000"});
            table7.AddRow(new string[] {
                        "RH GDC",
                        "10000",
                        "5000",
                        "5000"});
            table7.AddRow(new string[] {
                        "Taxa de Adm",
                        "25000",
                        "12500",
                        "12500"});
            table7.AddRow(new string[] {
                        "FACN",
                        "37802",
                        "",
                        "37802"});
#line 60
 testRunner.Given("que o aditivo \'Fase 1\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table7, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro",
                        "Marco"});
            table8.AddRow(new string[] {
                        "Viagens",
                        "2000",
                        "",
                        "",
                        "2000"});
            table8.AddRow(new string[] {
                        "RH MDireta",
                        "45000",
                        "15000",
                        "15000",
                        "15000"});
            table8.AddRow(new string[] {
                        "Custo Fixo",
                        "30000",
                        "10000",
                        "10000",
                        "10000"});
            table8.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        "",
                        "10000",
                        ""});
            table8.AddRow(new string[] {
                        "Impostos",
                        "2500",
                        "",
                        "2500",
                        ""});
#line 67
    testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table8, "E ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Fevereiro",
                        "Marco"});
            table9.AddRow(new string[] {
                        "Custo Fixo",
                        "550",
                        ""});
            table9.AddRow(new string[] {
                        "Taxa de Adm",
                        "1500",
                        ""});
            table9.AddRow(new string[] {
                        "RH MDireta",
                        "",
                        "25000"});
            table9.AddRow(new string[] {
                        "Impostos",
                        "",
                        "10"});
#line 74
 testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possua as seguintes despesas reais inf" +
                    "ormadas:", ((string)(null)), table9, "E ");
#line 80
 testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Fevereiro\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table10.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "20000",
                        "550"});
            table10.AddRow(new string[] {
                        "FACN",
                        "P1",
                        "0",
                        "0",
                        "0"});
            table10.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "2500",
                        "2500",
                        "0"});
            table10.AddRow(new string[] {
                        "Taxa de Adm",
                        "P1",
                        "12500",
                        "12500",
                        "0"});
            table10.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "10000",
                        "10000",
                        "1500"});
#line 81
 testRunner.Then("os custos administrativos no mes de \'Fevereiro\' de \'2014\' devem ser encontrados:", ((string)(null)), table10, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02.01 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
            "eses anteriores")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _02_01_DeveCalcularSaldoDisponivelQuandoHouverDespesasReaisLancadasEmMesesAnteriores()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02.01 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
                    "eses anteriores", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table11.AddRow(new string[] {
                        "Viagens",
                        "1000",
                        "1000",
                        ""});
            table11.AddRow(new string[] {
                        "RH GDC",
                        "10000",
                        "5000",
                        "5000"});
            table11.AddRow(new string[] {
                        "Taxa de Adm",
                        "25000",
                        "12500",
                        "12500"});
            table11.AddRow(new string[] {
                        "FACN",
                        "37802",
                        "",
                        "37802"});
#line 93
  testRunner.Given("que o aditivo \'Fase 1\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table11, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Fevereiro",
                        "Marco"});
            table12.AddRow(new string[] {
                        "Viagens",
                        "1500",
                        ""});
            table12.AddRow(new string[] {
                        "Taxa de Adm",
                        "",
                        "650"});
            table12.AddRow(new string[] {
                        "FACN",
                        "",
                        "802"});
#line 99
 testRunner.And("que o aditivo \'Fase 1\' do projeto \'P1\' possua as seguintes despesas reais informa" +
                    "das:", ((string)(null)), table12, "E ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro",
                        "Marco",
                        "Abril",
                        "Maio",
                        "Junho",
                        "Julho",
                        "Agosto",
                        "Setembro",
                        "Outubro",
                        "Novembro"});
            table13.AddRow(new string[] {
                        "RH MDireta",
                        "165000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000",
                        "15000"});
            table13.AddRow(new string[] {
                        "Custo Fixo",
                        "110000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000",
                        "10000"});
            table13.AddRow(new string[] {
                        "Taxa de Adm",
                        "50000",
                        "",
                        "10000",
                        "",
                        "10000",
                        "",
                        "10000",
                        "",
                        "10000",
                        "",
                        "10000",
                        ""});
            table13.AddRow(new string[] {
                        "Impostos",
                        "5000",
                        "",
                        "2500",
                        "",
                        "",
                        "",
                        "2500",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 104
     testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table13, "E ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Marco"});
            table14.AddRow(new string[] {
                        "Impostos",
                        "1800"});
#line 110
     testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possua as seguintes despesas reais inf" +
                    "ormadas:", ((string)(null)), table14, "E ");
#line 113
testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Outubro\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table15.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "100000",
                        "0"});
            table15.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "0",
                        "3200",
                        "0"});
            table15.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "10000",
                        "50000",
                        "0"});
#line 114
 testRunner.Then("os custos administrativos no mes de \'Outubro\' de \'2014\' devem ser encontrados:", ((string)(null)), table15, "Entao ");
#line 119
testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Marco\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table16.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "30000",
                        "0"});
            table16.AddRow(new string[] {
                        "FACN",
                        "P1",
                        "37802",
                        "37802",
                        "802"});
            table16.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "0",
                        "2500",
                        "1800"});
            table16.AddRow(new string[] {
                        "Taxa de Adm",
                        "P1",
                        "12500",
                        "25000",
                        "650"});
            table16.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "0",
                        "10000",
                        "0"});
#line 120
 testRunner.Then("os custos administrativos no mes de \'Marco\' de \'2014\' devem ser encontrados:", ((string)(null)), table16, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02.02 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
            "eses anteriores sem saldo disponivel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _02_02_DeveCalcularSaldoDisponivelQuandoHouverDespesasReaisLancadasEmMesesAnterioresSemSaldoDisponivel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02.02 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
                    "eses anteriores sem saldo disponivel", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 129
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro",
                        "Marco"});
            table17.AddRow(new string[] {
                        "RH MDireta",
                        "45000",
                        "15000",
                        "15000",
                        "15000"});
            table17.AddRow(new string[] {
                        "Custo Fixo",
                        "3000",
                        "10000",
                        "10000",
                        "10000"});
            table17.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        "",
                        "10000",
                        ""});
            table17.AddRow(new string[] {
                        "Impostos",
                        "2500",
                        "",
                        "2500",
                        ""});
#line 130
  testRunner.Given("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table17, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Janeiro",
                        "Fevereiro"});
            table18.AddRow(new string[] {
                        "Custo Fixo",
                        "10000",
                        "10000"});
            table18.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        ""});
            table18.AddRow(new string[] {
                        "Impostos",
                        "",
                        "2500"});
#line 136
  testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possua as seguintes despesas reais inf" +
                    "ormadas:", ((string)(null)), table18, "E ");
#line 141
 testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Marco\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table19.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "10000",
                        "0"});
            table19.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "0",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "0",
                        "0",
                        "0"});
#line 142
 testRunner.Then("os custos administrativos no mes de \'Marco\' de \'2014\' devem ser encontrados:", ((string)(null)), table19, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02.03 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
            "eses anteriores e com saldo disponivel negativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _02_03_DeveCalcularSaldoDisponivelQuandoHouverDespesasReaisLancadasEmMesesAnterioresEComSaldoDisponivelNegativo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02.03 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
                    "eses anteriores e com saldo disponivel negativo", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro",
                        "Marco"});
            table20.AddRow(new string[] {
                        "RH MDireta",
                        "45000",
                        "15000",
                        "15000",
                        "15000"});
            table20.AddRow(new string[] {
                        "Custo Fixo",
                        "3000",
                        "10000",
                        "10000",
                        "10000"});
            table20.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        "",
                        "10000",
                        ""});
            table20.AddRow(new string[] {
                        "Impostos",
                        "2500",
                        "",
                        "2500",
                        ""});
#line 150
  testRunner.Given("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table20, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Janeiro",
                        "Fevereiro"});
            table21.AddRow(new string[] {
                        "Custo Fixo",
                        "10000",
                        "15000"});
            table21.AddRow(new string[] {
                        "Taxa de Adm",
                        "20000",
                        ""});
            table21.AddRow(new string[] {
                        "Impostos",
                        "",
                        "2501"});
#line 156
 testRunner.And("que o aditivo \'Aditivo P2\' do projeto \'P2\' possua as seguintes despesas reais inf" +
                    "ormadas:", ((string)(null)), table21, "E ");
#line 161
testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Marco\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table22.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "5000",
                        "0"});
            table22.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "0",
                        "-1",
                        "0"});
            table22.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "0",
                        "-10000",
                        "0"});
#line 162
 testRunner.Then("os custos administrativos no mes de \'Marco\' de \'2014\' devem ser encontrados:", ((string)(null)), table22, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02.04 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
            "eses anteriores e com saldo disponivel descosiderando valores fora do periodo do" +
            " aditivo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo Calcular Automaticamente Saldo Disponivel Por Rubrica " +
            "Administrativa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug")]
        public virtual void _02_04_DeveCalcularSaldoDisponivelQuandoHouverDespesasReaisLancadasEmMesesAnterioresEComSaldoDisponivelDescosiderandoValoresForaDoPeriodoDoAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02.04 - Deve calcular saldo disponivel quando houver despesas reais lancadas em m" +
                    "eses anteriores e com saldo disponivel descosiderando valores fora do periodo do" +
                    " aditivo", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo",
                        "Bug"});
#line 169
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "inicio planejado",
                        "inicio real",
                        "situacao"});
            table23.AddRow(new string[] {
                        "P5",
                        "02/01/14",
                        "02/01/14",
                        "Em Andamento"});
#line 170
 testRunner.Given("que existem os projetos a seguir:", ((string)(null)), table23, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "projeto",
                        "inicio",
                        "termino",
                        "qtde meses",
                        "orcamento aprovado"});
            table24.AddRow(new string[] {
                        "Aditivo 1",
                        "P5",
                        "02/03/14",
                        "31/12/14",
                        "10",
                        "860105.00"});
#line 173
 testRunner.And("que existem os aditivos a seguir:", ((string)(null)), table24, "E ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Marco",
                        "Abril",
                        "Maio",
                        "Junho",
                        "Julho",
                        "Agosto",
                        "Setembro",
                        "Outubro",
                        "Novembro",
                        "Dezembro"});
            table25.AddRow(new string[] {
                        "Custo Fixo",
                        "21614.01",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,16",
                        "1801,25"});
            table25.AddRow(new string[] {
                        "Taxa de Adm",
                        "162399,98",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,33",
                        "13533,35"});
            table25.AddRow(new string[] {
                        "Apoio a Clientes",
                        "25803,12",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26"});
#line 176
 testRunner.And("que o aditivo \'Aditivo 1\' do projeto \'P5\' possui o seguinte planejamento para uso" +
                    " do orcamento aprovado no ano de \'2014\':", ((string)(null)), table25, "E ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Janeiro",
                        "Fevereiro"});
            table26.AddRow(new string[] {
                        "Custo Fixo",
                        "3602,32",
                        "1801,16",
                        "1801,16"});
            table26.AddRow(new string[] {
                        "Taxa de Adm",
                        "27066,66",
                        "13533,33",
                        "13533,33"});
            table26.AddRow(new string[] {
                        "Apoio a Clientes",
                        "4050,00",
                        "2025,00",
                        "2025,00"});
#line 181
 testRunner.And("que o aditivo \'Aditivo 1\' do projeto \'P5\' possui o seguinte planejamento para uso" +
                    " do orcamento aprovado no ano de \'2013\':", ((string)(null)), table26, "E ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Marco",
                        "Abril",
                        "Maio",
                        "Junho",
                        "Julho",
                        "Agosto",
                        "Setembro",
                        "Outubro",
                        "Novembro",
                        "Dezembro"});
            table27.AddRow(new string[] {
                        "Custo Fixo",
                        "1801,16",
                        "0,00",
                        "3602,16",
                        "1801,16",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "Taxa de Adm",
                        "13533,33",
                        "0,00",
                        "27066,66",
                        "13533,33",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "Apoio a Clientes",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26",
                        "2150,26"});
#line 186
 testRunner.And("que o aditivo \'Aditivo 1\' do projeto \'P5\' possua as seguintes despesas reais info" +
                    "rmadas no ano de \'2014\':", ((string)(null)), table27, "E ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Janeiro",
                        "Fevereiro"});
            table28.AddRow(new string[] {
                        "Custo Fixo",
                        "1801,16",
                        "1801,16"});
            table28.AddRow(new string[] {
                        "Taxa de Adm",
                        "13533,33",
                        "13533,33"});
            table28.AddRow(new string[] {
                        "Apoio a Clientes",
                        "2025,00",
                        "2025,00"});
#line 191
 testRunner.And("que o aditivo \'Aditivo 1\' do projeto \'P5\' possua as seguintes despesas reais info" +
                    "rmadas no ano de \'2013\':", ((string)(null)), table28, "E ");
#line 196
 testRunner.When("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Maio\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table29.AddRow(new string[] {
                        "Custo Fixo",
                        "P5",
                        "1801,16",
                        "3602,32",
                        "3602,16"});
            table29.AddRow(new string[] {
                        "Taxa de Adm",
                        "P5",
                        "13533,33",
                        "27066,66",
                        "27066,66"});
            table29.AddRow(new string[] {
                        "Apoio a Clientes",
                        "P5",
                        "2150,26",
                        "2150,26",
                        "2150,26"});
#line 197
 testRunner.Then("os custos administrativos no mes de \'Maio\' de \'2014\' devem ser encontrados:", ((string)(null)), table29, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
