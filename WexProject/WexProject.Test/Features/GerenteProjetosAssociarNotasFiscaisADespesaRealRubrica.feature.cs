// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GerenteDeProjetosAssociarNotasFiscaisADespesaRealDeUmaRubricaFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GerenteProjetosAssociarNotasFiscaisADespesaRealRubrica.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Gerente de projetos associar notas fiscais a despesa real de uma rubrica", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Gerente de projetos associar notas fiscais a despesa real de uma rubrica")))
            {
                WexProject.Test.Features.GerenteDeProjetosAssociarNotasFiscaisADespesaRealDeUmaRubricaFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "inicio planejado",
                        "inicio real",
                        "situacao"});
            table1.AddRow(new string[] {
                        "P2",
                        "02/01/14",
                        "02/01/14",
                        "Em Andamento"});
#line 6
  testRunner.Given("que existem os projetos a seguir:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "projeto",
                        "inicio",
                        "termino",
                        "qtde meses",
                        "orcamento aprovado"});
            table2.AddRow(new string[] {
                        "AdP2",
                        "P2",
                        "02/01/14",
                        "31/12/14",
                        "12",
                        "350.000,00"});
#line 9
     testRunner.And("que existem os aditivos a seguir:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "classe"});
            table3.AddRow(new string[] {
                        "Viagens",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "RH MDireta",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH GDC",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH TI",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH Designer",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH Testes",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH Qualidade",
                        "RecursosHumanos"});
            table3.AddRow(new string[] {
                        "RH DiretoDissidio",
                        "RecursosHumanos"});
#line 12
     testRunner.And("que existem os seguintes tipos de rubricas:", ((string)(null)), table3, "E ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.01 - Deve atualizar a despesa real ao associar notas fiscais a uma rubrica em " +
            "um periodo informado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos associar notas fiscais a despesa real de uma rubrica")]
        public virtual void _01_01_DeveAtualizarADespesaRealAoAssociarNotasFiscaisAUmaRubricaEmUmPeriodoInformado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.01 - Deve atualizar a despesa real ao associar notas fiscais a uma rubrica em " +
                    "um periodo informado", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table4.AddRow(new string[] {
                        "Viagens",
                        "10000",
                        "10000",
                        ""});
            table4.AddRow(new string[] {
                        "RH MDireta",
                        "50000",
                        "25000",
                        "25000"});
#line 24
 testRunner.Given("que o aditivo \'AdP2\' do projeto \'P2\' possui o seguinte planejamento para uso do o" +
                    "rcamento aprovado:", ((string)(null)), table4, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Fevereiro",
                        "Marco"});
            table5.AddRow(new string[] {
                        "Viagens",
                        "8000",
                        "2000"});
            table5.AddRow(new string[] {
                        "RH MDireta",
                        "23000",
                        "25000"});
#line 28
 testRunner.And("que existam as despesas reais no aditivo \'AdP2\' do projeto \'P2\' conforme informad" +
                    "as a seguir:", ((string)(null)), table5, "E ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "valor"});
            table6.AddRow(new string[] {
                        "13 salario",
                        "20,00"});
            table6.AddRow(new string[] {
                        "passagem aerea",
                        "30,00"});
            table6.AddRow(new string[] {
                        "transporte",
                        "20,00"});
#line 32
 testRunner.And("que existam as seguintes notas fiscais pendentes de associacao do aditivo \'AdP2\' " +
                    "do projeto \'P2\' no mes de \'Fevereiro\' de \'2014\'", ((string)(null)), table6, "E ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao"});
            table7.AddRow(new string[] {
                        "13 salario"});
            table7.AddRow(new string[] {
                        "passagem aerea"});
            table7.AddRow(new string[] {
                        "transporte"});
#line 37
 testRunner.When("as notas fiscais abaixo forem associadas com a rubrica \'Viagens\' do aditivo \'AdP2" +
                    "\' do projeto \'P2\' no mes de \'Fevereiro\' de \'2014\':", ((string)(null)), table7, "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "despesa real"});
            table8.AddRow(new string[] {
                        "Viagens",
                        "70"});
#line 42
 testRunner.Then("as despesas reais seguintes devem ser encontradas para o aditivo \'AdP2\' do projet" +
                    "o \'P2\' na rubrica \'Viagens\' no mes de \'Fevereiro\' de \'2014\':", ((string)(null)), table8, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.02 - Deve atualizar a despesa real ao desassociar notas fiscais de uma rubrica" +
            " em um periodo informado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos associar notas fiscais a despesa real de uma rubrica")]
        public virtual void _01_02_DeveAtualizarADespesaRealAoDesassociarNotasFiscaisDeUmaRubricaEmUmPeriodoInformado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.02 - Deve atualizar a despesa real ao desassociar notas fiscais de uma rubrica" +
                    " em um periodo informado", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table9.AddRow(new string[] {
                        "Viagens",
                        "10000",
                        "10000",
                        ""});
            table9.AddRow(new string[] {
                        "RH MDireta",
                        "50000",
                        "25000",
                        "25000"});
#line 47
 testRunner.Given("que o aditivo \'AdP2\' do projeto \'P2\' possui o seguinte planejamento para uso do o" +
                    "rcamento aprovado:", ((string)(null)), table9, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Fevereiro",
                        "Marco"});
            table10.AddRow(new string[] {
                        "Viagens",
                        "8000",
                        "2000"});
            table10.AddRow(new string[] {
                        "RH MDireta",
                        "23000",
                        "25000"});
#line 51
 testRunner.And("que existam as despesas reais no aditivo \'AdP2\' do projeto \'P2\' conforme informad" +
                    "as a seguir:", ((string)(null)), table10, "E ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "valor"});
            table11.AddRow(new string[] {
                        "13 salario",
                        "20,00"});
            table11.AddRow(new string[] {
                        "passagem aerea",
                        "30,00"});
            table11.AddRow(new string[] {
                        "transporte",
                        "20,00"});
#line 55
 testRunner.And("que existam as seguintes notas fiscais associadas a rubrica \'Viagens\' do aditivo " +
                    "\'AdP2\' do projeto \'P2\' no mes de \'Fevereiro\' de \'2014\'", ((string)(null)), table11, "E ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao"});
            table12.AddRow(new string[] {
                        "13 salario"});
            table12.AddRow(new string[] {
                        "passagem aerea"});
#line 60
 testRunner.When("as notas fiscais abaixo forem desassociadas da rubrica \'Viagens\' do aditivo \'AdP2" +
                    "\' do projeto \'P2\' no mes de \'Fevereiro\' de \'2014\':", ((string)(null)), table12, "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "despesa real"});
            table13.AddRow(new string[] {
                        "Viagens",
                        "20"});
#line 64
 testRunner.Then("as despesas reais seguintes devem ser encontradas para o aditivo \'AdP2\' do projet" +
                    "o \'P2\' na rubrica \'Viagens\' no mes de \'Fevereiro\' de \'2014\':", ((string)(null)), table13, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02.01 - Deve mostrar rubricas de desenvolvimento, com excecao de rubricas de RH, " +
            "ao acessar secao Associar notas fiscais do mes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos associar notas fiscais a despesa real de uma rubrica")]
        public virtual void _02_01_DeveMostrarRubricasDeDesenvolvimentoComExcecaoDeRubricasDeRHAoAcessarSecaoAssociarNotasFiscaisDoMes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02.01 - Deve mostrar rubricas de desenvolvimento, com excecao de rubricas de RH, " +
                    "ao acessar secao Associar notas fiscais do mes", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table14.AddRow(new string[] {
                        "Viagens",
                        "20000",
                        "10000",
                        "1000"});
            table14.AddRow(new string[] {
                        "RH MDireta",
                        "50000",
                        "25000",
                        "25000"});
            table14.AddRow(new string[] {
                        "RH GDC",
                        "20000",
                        "10000",
                        "10000"});
            table14.AddRow(new string[] {
                        "RH TI",
                        "12000",
                        "6000",
                        "6000"});
            table14.AddRow(new string[] {
                        "RH Designer",
                        "1802",
                        "901",
                        "901"});
            table14.AddRow(new string[] {
                        "RH Testes",
                        "5000",
                        "2500",
                        "2500"});
#line 69
 testRunner.Given("que o aditivo \'AdP2\' do projeto \'P2\' possui o seguinte planejamento para uso do o" +
                    "rcamento aprovado:", ((string)(null)), table14, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "classe"});
            table15.AddRow(new string[] {
                        "Treinamentos",
                        "Desenvolvimento"});
#line 77
 testRunner.And("que existem os seguintes tipos de rubricas:", ((string)(null)), table15, "E ");
#line 80
 testRunner.When("as despesas reais do projeto \'P2\' e aditivo \'AdP2\' tiverem as rubricas para assoc" +
                    "iar notas fiscais listadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica"});
            table16.AddRow(new string[] {
                        "Viagens"});
#line 81
 testRunner.Then("devo encontrar nas despesas reais as seguintes rubricas de desenvolvimento para v" +
                    "incular as notas fiscais:", ((string)(null)), table16, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
