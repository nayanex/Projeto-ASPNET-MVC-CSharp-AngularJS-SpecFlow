// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GerenteDeProjetosCalcularOOrcamentoRestantePRubricasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GerentePrejetosCalcularOrcamentoRestanteParaRubricas.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Gerente de projetos calcular o orçamento restante p/ rubricas", "", ProgrammingLanguage.CSharp, new string[] {
                        "Custos",
                        "OrcamentoAprovado",
                        "pbi_01.09.02"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Gerente de projetos calcular o orçamento restante p/ rubricas")))
            {
                WexProject.Test.Features.GerenteDeProjetosCalcularOOrcamentoRestantePRubricasFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "classe"});
            table1.AddRow(new string[] {
                        "Viagens",
                        "Desenvolvimento"});
            table1.AddRow(new string[] {
                        "RH MDireta",
                        "Desenvolvimento"});
            table1.AddRow(new string[] {
                        "Custo Fixo",
                        "Administrativo"});
#line 7
 testRunner.Given("que existem os seguintes tipos de rubricas:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "inicio planejado",
                        "inicio real",
                        "situacao"});
            table2.AddRow(new string[] {
                        "P1",
                        "03/02/14",
                        "31/12/14",
                        "Em Andamento"});
#line 12
    testRunner.And("que existem os projetos a seguir:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "projeto",
                        "inicio",
                        "termino",
                        "qtde meses",
                        "orcamento aprovado"});
            table3.AddRow(new string[] {
                        "adP1",
                        "P1",
                        "03/02/14",
                        "31/12/14",
                        "11",
                        "100.000,00"});
#line 15
    testRunner.And("que existem os aditivos a seguir:", ((string)(null)), table3, "E ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total"});
            table4.AddRow(new string[] {
                        "Viagens",
                        "0"});
            table4.AddRow(new string[] {
                        "RH MDireta",
                        "0"});
            table4.AddRow(new string[] {
                        "Custo Fixo",
                        "0"});
#line 18
    testRunner.And("que o aditivo \'adP1\' do projeto \'P1\' possui o seguinte planejamento para uso do o" +
                    "rcamento aprovado:", ((string)(null)), table4, "E ");
#line 23
 testRunner.And("que o aditivo \'adP1\' do projeto \'P1\' esta sendo planejado nesse momento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 - Deve calcular o orcamento restante igual o valor aprovado quando nao houver " +
            "nenhum orcamento de rubricas planejados")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos calcular o orçamento restante p/ rubricas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OrcamentoAprovado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_01.09.02")]
        public virtual void _01_DeveCalcularOOrcamentoRestanteIgualOValorAprovadoQuandoNaoHouverNenhumOrcamentoDeRubricasPlanejados()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Deve calcular o orcamento restante igual o valor aprovado quando nao houver " +
                    "nenhum orcamento de rubricas planejados", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 26
 testRunner.When("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' tiver o valor restante par" +
                    "a rubricas recalculado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then("devo encontrar no orcamento aprovado do projeto um valor restante de \'100.000,00\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02 - Deve calcular o orcamento restante subtraindo o valor do orcamento das rubri" +
            "cas planejados")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos calcular o orçamento restante p/ rubricas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OrcamentoAprovado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_01.09.02")]
        public virtual void _02_DeveCalcularOOrcamentoRestanteSubtraindoOValorDoOrcamentoDasRubricasPlanejados()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Deve calcular o orcamento restante subtraindo o valor do orcamento das rubri" +
                    "cas planejados", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
 testRunner.When("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' receber o valor de \'10.000" +
                    ",00\' na rubrica \'Viagens\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 31
 testRunner.And("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' tiver o valor restante par" +
                    "a rubricas recalculado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
 testRunner.Then("devo encontrar no orcamento aprovado do projeto um valor restante de \'90.000,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 - Deve calcular o orcamento restante quando o valores planejados nas rubricas " +
            "somados for maior que o orcamento aprovado do aditivo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos calcular o orçamento restante p/ rubricas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OrcamentoAprovado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_01.09.02")]
        public virtual void _03_DeveCalcularOOrcamentoRestanteQuandoOValoresPlanejadosNasRubricasSomadosForMaiorQueOOrcamentoAprovadoDoAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Deve calcular o orcamento restante quando o valores planejados nas rubricas " +
                    "somados for maior que o orcamento aprovado do aditivo", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total"});
            table5.AddRow(new string[] {
                        "Viagens",
                        "50.000,00"});
            table5.AddRow(new string[] {
                        "RH MDireta",
                        "30.000,00"});
#line 35
    testRunner.Given("que o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' foi replanejado confor" +
                    "me a seguir:", ((string)(null)), table5, "Dado ");
#line 39
 testRunner.When("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' receber o valor de \'70.000" +
                    ",01\' na rubrica \'Viagens\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 40
 testRunner.And("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' tiver o valor restante par" +
                    "a rubricas recalculado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 41
 testRunner.Then("devo encontrar no orcamento aprovado do projeto um valor restante de \'-0,01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 - Deve calcular o orcamento restante quando o valores planejados das rubricas " +
            "somados for igual ao orcamento aprovado do aditivo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos calcular o orçamento restante p/ rubricas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OrcamentoAprovado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_01.09.02")]
        public virtual void _04_DeveCalcularOOrcamentoRestanteQuandoOValoresPlanejadosDasRubricasSomadosForIgualAoOrcamentoAprovadoDoAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Deve calcular o orcamento restante quando o valores planejados das rubricas " +
                    "somados for igual ao orcamento aprovado do aditivo", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total"});
            table6.AddRow(new string[] {
                        "Viagens",
                        "69.999,99"});
            table6.AddRow(new string[] {
                        "RH MDireta",
                        "30.000,00"});
#line 44
    testRunner.Given("que o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' foi replanejado confor" +
                    "me a seguir:", ((string)(null)), table6, "Dado ");
#line 48
 testRunner.When("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' receber o valor de \'70.000" +
                    ",00\' na rubrica \'Viagens\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 49
 testRunner.And("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' tiver o valor restante par" +
                    "a rubricas recalculado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 50
 testRunner.Then("devo encontrar no orcamento aprovado do projeto um valor restante de \'0,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05 - Deve calcular o orcamento restante subtraindo o valor do orcamento das rubri" +
            "cas administrativas planejadas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de projetos calcular o orçamento restante p/ rubricas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("OrcamentoAprovado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_01.09.02")]
        public virtual void _05_DeveCalcularOOrcamentoRestanteSubtraindoOValorDoOrcamentoDasRubricasAdministrativasPlanejadas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Deve calcular o orcamento restante subtraindo o valor do orcamento das rubri" +
                    "cas administrativas planejadas", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 53
 testRunner.When("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' receber o valor de \'5.000," +
                    "00\' na rubrica \'Custo Fixo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 54
    testRunner.And("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' receber o valor de \'10.000" +
                    ",01\' na rubrica \'RH MDireta\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
    testRunner.And("o orcamento aprovado do aditivo \'adP1\' do projeto \'P1\' tiver o valor restante par" +
                    "a rubricas recalculado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 56
 testRunner.Then("devo encontrar no orcamento aprovado do projeto um valor restante de \'84.999,99\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
