// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GerenteDePortifolioValidarOsDadosDaEmpresaInstituicaoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GerentePortifolioValidarDadosEmpresaInstituicao.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Gerente de Portifólio validar os dados da Empresa/Instituição", "Como um Gerente de Portifólio\r\nEu quero validar os dados da Empresa/Instituição\r\n" +
                    "Para que se evite cadastros problemáticos", ProgrammingLanguage.CSharp, new string[] {
                        "pbi_9.15"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Gerente de Portifólio validar os dados da Empresa/Instituição")))
            {
                WexProject.Test.Features.GerenteDePortifolioValidarOsDadosDaEmpresaInstituicaoFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 - Excluir um País que está sendo usado por uma Empresa/Instituição.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _01_ExcluirUmPaisQueEstaSendoUsadoPorUmaEmpresaInstituicao_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Excluir um País que está sendo usado por uma Empresa/Instituição.", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
   testRunner.Given("uma empresa com o nome \'empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
   testRunner.And("o(s) país(es) \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 12
   testRunner.And("o país \'Pais01\' que está sendo usado na Empresa/Instituição \'empresa01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 13
   testRunner.When("tentar excluir o pais \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 14
   testRunner.Then("deverá exibir a seguinte excessão para o pais \'Pais01\': \'O País está sendo usado " +
                    "numa Empresa/Instituição\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02 - Criar um novo País. Verificar se a Máscara do País vem, por padrão, com o va" +
            "lor \"55\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _02_CriarUmNovoPais_VerificarSeAMascaraDoPaisVemPorPadraoComOValor55()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Criar um novo País. Verificar se a Máscara do País vem, por padrão, com o va" +
                    "lor \"55\"", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
  testRunner.Given("o(s) país(es) \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 18
  testRunner.When("criar um pais \'Pais02\' com situação \'ativo\' e marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 19
  testRunner.Then("a Máscara do País \'Pais02\' deve estar com o valor padrão \'55\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 - Cadastrar mais de um país como \"País Padrão\" (ambos com situação ativo).")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _03_CadastrarMaisDeUmPaisComoPaisPadraoAmbosComSituacaoAtivo_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Cadastrar mais de um país como \"País Padrão\" (ambos com situação ativo).", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
  testRunner.Given("o(s) país(es) \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 23
  testRunner.And("o pais \'Pais01\' marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 24
  testRunner.And("o pais \'Pais01\' marcado como \'ativo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 25
  testRunner.When("criar um pais \'Pais02\' com situação \'ativo\' e marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 26
  testRunner.Then("exibir a janela de modificação de pais padrão para o pais \'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 - Cadastrar mais de um país como \"País Padrão\" (apenas um com a situação ativo" +
            ", o resto como inativo)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _04_CadastrarMaisDeUmPaisComoPaisPadraoApenasUmComASituacaoAtivoORestoComoInativo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Cadastrar mais de um país como \"País Padrão\" (apenas um com a situação ativo" +
                    ", o resto como inativo)", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
  testRunner.Given("o(s) país(es) \'Pais01\',\'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 30
  testRunner.And("o pais \'Pais01\' marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 31
  testRunner.And("o pais \'Pais01\' marcado como \'inativo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
  testRunner.And("o pais \'Pais02\' marcado como \'inativo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
  testRunner.When("criar um pais \'Pais03\' com situação \'ativo\' e marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 34
  testRunner.Then("não exibir a janela de modificação de pais padrão para o pais \'Pais03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05 - Considerar um novo País como \"País Padrão\" quando já existir um outro ocupan" +
            "do esse cargo.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _05_ConsiderarUmNovoPaisComoPaisPadraoQuandoJaExistirUmOutroOcupandoEsseCargo_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Considerar um novo País como \"País Padrão\" quando já existir um outro ocupan" +
                    "do esse cargo.", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 38
  testRunner.Given("o(s) país(es) \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 39
  testRunner.And("o pais \'Pais01\' marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 40
  testRunner.And("o pais \'Pais01\' marcado como \'ativo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 41
  testRunner.When("criar um pais \'Pais02\' com situação \'ativo\' e marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
  testRunner.And("exibir a janela de modificação de pais padrão para o pais \'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 43
  testRunner.And("definir que o país padrão agora deve ser o país \'Pais01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 44
  testRunner.Then("o pais \'Pais01\' deve estar como \'não padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 45
  testRunner.And("o pais \'Pais02\' deve estar como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("06 - Cadastrar duas empresas/instituições com o mesmo nome.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _06_CadastrarDuasEmpresasInstituicoesComOMesmoNome_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Cadastrar duas empresas/instituições com o mesmo nome.", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 49
  testRunner.Given("uma empresa com o nome \'EMPRESA 01\' e sigla \'EMP01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 50
  testRunner.And("uma empresa com o nome \'empresa 01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 51
  testRunner.When("salvar a empresa \'EMPRESA 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 52
  testRunner.Then("a empresa \'empresa 01\' não pode ser salva e deve exbir a mensagem \'Já existe uma " +
                    "empresa cadastrada com este mesmo nome\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("07 - Criação da Lista de Países que virão no cadastro de Empresa/Instituição.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _07_CriacaoDaListaDePaisesQueViraoNoCadastroDeEmpresaInstituicao_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Criação da Lista de Países que virão no cadastro de Empresa/Instituição.", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 56
  testRunner.Given("o(s) país(es) \'Pais01\',\'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 57
  testRunner.And("o pais \'Pais02\' marcado como \'inativo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 58
  testRunner.When("uma empresa for criada com o nome \'empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 59
  testRunner.Then("deveria vir na lista de países o(s) país(es) \'Pais01\' para a empresa \'empresa01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("08 - Haver um País definido como \"País Padrão\".")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _08_HaverUmPaisDefinidoComoPaisPadrao_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Haver um País definido como \"País Padrão\".", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 63
  testRunner.Given("o(s) país(es) \'Pais01\',\'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 64
  testRunner.And("o pais \'Pais02\' marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 65
  testRunner.When("uma empresa for criada com o nome \'empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
  testRunner.Then("o pais da empresa \'empresa01\' deverá ser \'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("09 - Existir dois Países cadastrados. Estar no cadastro de nova Empresa.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _09_ExistirDoisPaisesCadastrados_EstarNoCadastroDeNovaEmpresa_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Existir dois Países cadastrados. Estar no cadastro de nova Empresa.", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 70
  testRunner.Given("o(s) país(es) \'Pais01\',\'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 71
  testRunner.And("o pais \'Pais02\' ter como mascara \'(xx)xxxx-xxxx\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 72
  testRunner.And("uma empresa com o nome \'empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 73
  testRunner.When("selecionar o \'Pais02\' para a empresa \'empresa01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 74
  testRunner.Then("o campo \'Telefone\' da empresa \'empresa01\' deve estar com a máscara \'(xx)xxxx-xxxx" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("10 - Existir dois Países cadastrados. Estar no cadastro de nova Empresa.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Gerente de Portifólio validar os dados da Empresa/Instituição")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pbi_9.15")]
        public virtual void _10_ExistirDoisPaisesCadastrados_EstarNoCadastroDeNovaEmpresa_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Existir dois Países cadastrados. Estar no cadastro de nova Empresa.", ((string[])(null)));
#line 76
this.ScenarioSetup(scenarioInfo);
#line 78
  testRunner.Given("o(s) país(es) \'Pais01\',\'Pais02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 79
  testRunner.And("o pais \'Pais02\' marcado como \'padrão\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 80
  testRunner.And("o pais \'Pais02\' ter como mascara \'(xx)xxxx-xxxx\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 81
  testRunner.And("uma empresa com o nome \'empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 82
  testRunner.When("deselecionar o pais \'Pais02\' da empresa \'empresa01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 83
  testRunner.Then("o campo \'Telefone\' da empresa \'empresa01\' deve estar com a máscara \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
