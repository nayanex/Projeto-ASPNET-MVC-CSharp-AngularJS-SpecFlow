// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CoordenadorAdministrativoLancarAsDespesasReaisAdministrativasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CoordenadorAdministrativoLancarDespesasReaisAdministrativas.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Coordenador Administrativo lancar as despesas reais administrativas", "", ProgrammingLanguage.CSharp, new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Coordenador Administrativo lancar as despesas reais administrativas")))
            {
                WexProject.Test.Features.CoordenadorAdministrativoLancarAsDespesasReaisAdministrativasFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "inicio planejado",
                        "inicio real",
                        "situacao"});
            table1.AddRow(new string[] {
                        "P1",
                        "03/02/14",
                        "03/02/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P2",
                        "02/01/14",
                        "02/01/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P3",
                        "01/06/14",
                        "01/06/14",
                        "Em Andamento"});
            table1.AddRow(new string[] {
                        "P4",
                        "01/07/14",
                        "01/07/14",
                        "Em Andamento"});
#line 7
  testRunner.Given("que existem os projetos a seguir:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "descricao",
                        "projeto",
                        "inicio",
                        "termino",
                        "qtde meses",
                        "orcamento aprovado"});
            table2.AddRow(new string[] {
                        "Fase 1",
                        "P1",
                        "03/02/14",
                        "31/03/14",
                        "2",
                        "93.802,00"});
            table2.AddRow(new string[] {
                        "Fase 2",
                        "P1",
                        "01/03/14",
                        "30/06/14",
                        "3",
                        "150.000,50"});
            table2.AddRow(new string[] {
                        "Aditivo P2",
                        "P2",
                        "02/01/14",
                        "31/12/14",
                        "12",
                        "350.000,00"});
            table2.AddRow(new string[] {
                        "Aditivo P4",
                        "P4",
                        "01/07/14",
                        "30/09/14",
                        "3",
                        "50.100,00"});
#line 13
     testRunner.And("que existem os aditivos a seguir:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "classe"});
            table3.AddRow(new string[] {
                        "Viagens",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "RH MDireta",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "RH GDC",
                        "Desenvolvimento"});
            table3.AddRow(new string[] {
                        "Custo Fixo",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Taxa de Adm",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "FACN",
                        "Administrativo"});
            table3.AddRow(new string[] {
                        "Impostos",
                        "Administrativo"});
#line 19
     testRunner.And("que existem os seguintes tipos de rubricas:", ((string)(null)), table3, "E ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.01 - Deve atualizar a despesa real quando o projeto possuir apenas um aditivo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo lancar as despesas reais administrativas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _01_01_DeveAtualizarADespesaRealQuandoOProjetoPossuirApenasUmAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.01 - Deve atualizar a despesa real quando o projeto possuir apenas um aditivo", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table4.AddRow(new string[] {
                        "Viagens",
                        "10000",
                        "10000",
                        ""});
            table4.AddRow(new string[] {
                        "RH MDireta",
                        "50000",
                        "25000",
                        "25000"});
            table4.AddRow(new string[] {
                        "Custo Fixo",
                        "20000",
                        "10000",
                        "10000"});
            table4.AddRow(new string[] {
                        "Taxa de Adm",
                        "12000",
                        "6000",
                        "6000"});
            table4.AddRow(new string[] {
                        "Impostos",
                        "1802",
                        "901",
                        "901"});
#line 33
 testRunner.Given("que o aditivo \'Aditivo P2\' do projeto \'P2\' possui o seguinte planejamento para us" +
                    "o do orcamento aprovado:", ((string)(null)), table4, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Janeiro",
                        "Fevereiro"});
            table5.AddRow(new string[] {
                        "Viagens",
                        "",
                        "8000"});
            table5.AddRow(new string[] {
                        "RH MDireta",
                        "23000",
                        "25000"});
            table5.AddRow(new string[] {
                        "Custo Fixo",
                        "",
                        "9500"});
            table5.AddRow(new string[] {
                        "Taxa de Adm",
                        "10000",
                        "6000"});
            table5.AddRow(new string[] {
                        "Impostos",
                        "",
                        "1200"});
#line 40
 testRunner.When("as despesas reais do projeto \'P2\' forem informadas conforme a seguir:", ((string)(null)), table5, "Quando ");
#line 47
 testRunner.And("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Fevereiro\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table6.AddRow(new string[] {
                        "Custo Fixo",
                        "P2",
                        "10000",
                        "10000",
                        "9500"});
            table6.AddRow(new string[] {
                        "Taxa de Adm",
                        "P2",
                        "6000",
                        "-4000",
                        "6000"});
            table6.AddRow(new string[] {
                        "Impostos",
                        "P2",
                        "901",
                        "901",
                        "1200"});
#line 48
 testRunner.Then("devo encontrar os seguintes custos administrativos no mes de \'Fevereiro\' de \'2014" +
                    "\':", ((string)(null)), table6, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.02 - Deve atualizar a despesa real quando o projeto possuir mais de um aditivo" +
            " com periodos nao conflitantes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo lancar as despesas reais administrativas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _01_02_DeveAtualizarADespesaRealQuandoOProjetoPossuirMaisDeUmAditivoComPeriodosNaoConflitantes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.02 - Deve atualizar a despesa real quando o projeto possuir mais de um aditivo" +
                    " com periodos nao conflitantes", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table7.AddRow(new string[] {
                        "Viagens",
                        "1000",
                        "1000",
                        ""});
            table7.AddRow(new string[] {
                        "RH GDC",
                        "10000",
                        "5000",
                        "5000"});
            table7.AddRow(new string[] {
                        "Taxa de Adm",
                        "25000",
                        "12500",
                        "12500"});
            table7.AddRow(new string[] {
                        "FACN",
                        "37802",
                        "",
                        "37802"});
#line 59
  testRunner.Given("que o aditivo \'Fase 1\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table7, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Abril",
                        "Maio",
                        "Junho"});
            table8.AddRow(new string[] {
                        "RH MDireta",
                        "50100",
                        "16700",
                        "16700",
                        "16700"});
            table8.AddRow(new string[] {
                        "RH GDC",
                        "15000",
                        "",
                        "",
                        "15000"});
            table8.AddRow(new string[] {
                        "Custo Fixo",
                        "18000,50",
                        "6000",
                        "6000",
                        "6000,50"});
            table8.AddRow(new string[] {
                        "Taxa de Adm",
                        "51000",
                        "17000",
                        "17000",
                        "17000"});
            table8.AddRow(new string[] {
                        "Impostos",
                        "15900",
                        "15000",
                        "900",
                        ""});
#line 65
    testRunner.And("que o aditivo \'Fase 2\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table8, "E ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Marco",
                        "Abril",
                        "Maio",
                        "Junho"});
            table9.AddRow(new string[] {
                        "Custo Fixo",
                        "",
                        "",
                        "",
                        "6000,50"});
            table9.AddRow(new string[] {
                        "Taxa de Adm",
                        "12500",
                        "10000",
                        "24000",
                        ""});
            table9.AddRow(new string[] {
                        "Impostos",
                        "",
                        "15000",
                        "900",
                        ""});
#line 72
 testRunner.When("as despesas reais do projeto \'P1\' forem informadas conforme a seguir:", ((string)(null)), table9, "Quando ");
#line 77
    testRunner.And("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Junho\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table10.AddRow(new string[] {
                        "Custo Fixo",
                        "P1",
                        "6000,50",
                        "18000,50",
                        "6000,50"});
            table10.AddRow(new string[] {
                        "Impostos",
                        "P1",
                        "0",
                        "0",
                        "0"});
            table10.AddRow(new string[] {
                        "Taxa de Adm",
                        "P1",
                        "17000",
                        "29500",
                        "0"});
#line 78
 testRunner.Then("devo encontrar os seguintes custos administrativos no mes de \'Junho\' de \'2014\':", ((string)(null)), table10, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01.03 - Deve atualizar a despesa real quando o projeto possuir mais de um aditivo" +
            " com periodos conflitantes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Coordenador Administrativo lancar as despesas reais administrativas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Custos")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DespesasReais")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Administrativo")]
        public virtual void _01_03_DeveAtualizarADespesaRealQuandoOProjetoPossuirMaisDeUmAditivoComPeriodosConflitantes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01.03 - Deve atualizar a despesa real quando o projeto possuir mais de um aditivo" +
                    " com periodos conflitantes", new string[] {
                        "Custos",
                        "DespesasReais",
                        "Administrativo"});
#line 85
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Fevereiro",
                        "Marco"});
            table11.AddRow(new string[] {
                        "Viagens",
                        "1000",
                        "1000",
                        ""});
            table11.AddRow(new string[] {
                        "RH GDC",
                        "10000",
                        "5000",
                        "5000"});
            table11.AddRow(new string[] {
                        "Taxa de Adm",
                        "25000",
                        "12500",
                        "12500"});
            table11.AddRow(new string[] {
                        "FACN",
                        "37802",
                        "",
                        "37802"});
#line 86
  testRunner.Given("que o aditivo \'Fase 1\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table11, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Total",
                        "Marco",
                        "Abril",
                        "Maio"});
            table12.AddRow(new string[] {
                        "Custo Fixo",
                        "18000",
                        "6000",
                        "6000",
                        "6000"});
            table12.AddRow(new string[] {
                        "Taxa de Adm",
                        "51000",
                        "17000",
                        "17000",
                        "17000"});
            table12.AddRow(new string[] {
                        "Impostos",
                        "15900",
                        "15000",
                        "900",
                        ""});
#line 92
     testRunner.And("que o aditivo \'Fase 2\' do projeto \'P1\' possui o seguinte planejamento para uso do" +
                    " orcamento aprovado:", ((string)(null)), table12, "E ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "Marco",
                        "Abril"});
            table13.AddRow(new string[] {
                        "Taxa de Adm",
                        "29000",
                        "100"});
#line 97
 testRunner.When("as despesas reais do projeto \'P1\' forem informadas conforme a seguir:", ((string)(null)), table13, "Quando ");
#line 100
     testRunner.And("os custos administrativos dos projetos \'Em Andamento\' forem calculados para o mes" +
                    " de \'Maio\' de \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "rubrica",
                        "projeto",
                        "orcamento aprovado",
                        "saldo disponivel",
                        "despesa real"});
            table14.AddRow(new string[] {
                        "Custo Fixo",
                        "P1",
                        "6000",
                        "18000",
                        "0"});
            table14.AddRow(new string[] {
                        "Impostos",
                        "P1",
                        "0",
                        "15900",
                        "0"});
            table14.AddRow(new string[] {
                        "Taxa de Adm",
                        "P1",
                        "17000",
                        "46900",
                        "0"});
#line 101
 testRunner.Then("devo encontrar os seguintes custos administrativos no mes de \'Maio\' de \'2014\':", ((string)(null)), table14, "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
