// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.32559
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Gerente de Projetos informar manualmente o orçamento aprovado por meio de rubrica" +
        "s")]
    [NUnit.Framework.CategoryAttribute("pbi_01.02.02")]
    public partial class GerenteDeProjetosInformarManualmenteOOrcamentoAprovadoPorMeioDeRubricasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GerenteProjetosInformarOrcamentoPorMeioDeRubricas.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Gerente de Projetos informar manualmente o orçamento aprovado por meio de rubrica" +
                    "s", "", ProgrammingLanguage.CSharp, new string[] {
                        "pbi_01.02.02"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 - Adicionar aditivo com descrição em branco")]
        [NUnit.Framework.CategoryAttribute("rn")]
        public virtual void _01_AdicionarAditivoComDescricaoEmBranco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Adicionar aditivo com descrição em branco", new string[] {
                        "rn"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table1.AddRow(new string[] {
                        "projeto 01"});
#line 8
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table2.AddRow(new string[] {
                        "vazio",
                        "\"15/04/2013\"",
                        "\"15/07/2013\"",
                        "\"1.000.000,00\""});
#line 11
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table2, "E ");
#line 14
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
     testRunner.Then("deve ser exibida a mensagem de erro \"Nome inválido!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 - Adicionar data de ínicio do projeto em branco")]
        public virtual void _02_AdicionarDataDeInicioDoProjetoEmBranco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Adicionar data de ínicio do projeto em branco", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table3.AddRow(new string[] {
                        "projeto 01"});
#line 19
    testRunner.Given("que exita(m) o(s) projeto(s) a seguir:", ((string)(null)), table3, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table4.AddRow(new string[] {
                        "aditivo 01",
                        "\"15/04/2013\"",
                        "\"15/07/2013\"",
                        "\"1.000.000,00\""});
#line 22
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table4, "E ");
#line 25
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "erro normal"});
            table5.AddRow(new string[] {
                        "\"Data inválida!\""});
#line 26
     testRunner.Then("deve ser exibida a seguinte mensagem de erro:", ((string)(null)), table5, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 - Adicionar data de término do projeto em branco")]
        public virtual void _03_AdicionarDataDeTerminoDoProjetoEmBranco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Adicionar data de término do projeto em branco", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table6.AddRow(new string[] {
                        "projeto 01"});
#line 32
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table6, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table7.AddRow(new string[] {
                        "aditivo 01",
                        "\"15/04/2013\"",
                        "\"dd/mm/aaaa\"",
                        "\"1.000.000,00\""});
#line 35
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table7, "E ");
#line 38
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "erro normal"});
            table8.AddRow(new string[] {
                        "\"Data inválida!\""});
#line 39
     testRunner.Then("deve ser exibida a seguinte mensagem de erro:", ((string)(null)), table8, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04 - Adicionar aditivo com data de término do projeto menor que a data de início")]
        public virtual void _04_AdicionarAditivoComDataDeTerminoDoProjetoMenorQueADataDeInicio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Adicionar aditivo com data de término do projeto menor que a data de início", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table9.AddRow(new string[] {
                        "projeto 01"});
#line 45
    testRunner.Given("que exita(m) o(s) projeto(s) a seguir:", ((string)(null)), table9, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table10.AddRow(new string[] {
                        "aditivo 01",
                        "\"15/07/2013\"",
                        "\"15/07/2013\"",
                        "\"1.000.000,00\""});
#line 48
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table10, "E ");
#line 51
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "erro normal"});
            table11.AddRow(new string[] {
                        "\"Período inválido!\""});
#line 52
     testRunner.Then("deve ser exibida a seguinte mensagem de erro:", ((string)(null)), table11, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05 - Calcular Qtde de Meses baseado na data de início e término do projeto")]
        public virtual void _05_CalcularQtdeDeMesesBaseadoNaDataDeInicioETerminoDoProjeto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Calcular Qtde de Meses baseado na data de início e término do projeto", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table12.AddRow(new string[] {
                        "projeto 01"});
#line 58
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table12, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table13.AddRow(new string[] {
                        "aditivo 01",
                        "\"18/06/2013\"",
                        "\"13/11/2013\"",
                        "\"1.000.000,00\""});
#line 61
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table13, "E ");
#line 64
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Qtde de Meses"});
            table14.AddRow(new string[] {
                        "5"});
#line 65
     testRunner.Then("os dados do(s) projeto(s) deve(m) ser:", ((string)(null)), table14, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06- Adicionar orçamento aprovado em branco")]
        public virtual void _06_AdicionarOrcamentoAprovadoEmBranco()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06- Adicionar orçamento aprovado em branco", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table15.AddRow(new string[] {
                        "projeto 01"});
#line 71
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table15, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table16.AddRow(new string[] {
                        "aditivo 01",
                        "\"18/06/2013\"",
                        "\"13/11/2013\"",
                        "\"1.000.000,00\""});
#line 74
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table16, "E ");
#line 77
    testRunner.When("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "erro normal"});
            table17.AddRow(new string[] {
                        "\"Valor inválido!\""});
#line 78
     testRunner.Then("deve ser exibida a seguinte mensagem de erro:", ((string)(null)), table17, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07 - Um aditivo pode ter mais de um centro de custos")]
        public virtual void _07_UmAditivoPodeTerMaisDeUmCentroDeCustos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Um aditivo pode ter mais de um centro de custos", ((string[])(null)));
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table18.AddRow(new string[] {
                        "projeto 01"});
#line 84
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table18, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table19.AddRow(new string[] {
                        "centro de custo 01"});
#line 87
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table19, "E ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table20.AddRow(new string[] {
                        "centro de custo 02"});
#line 90
    testRunner.When("houver tentativa de adicionar o(s) centro(s) de custos a seguir:", ((string)(null)), table20, "Quando ");
#line 93
     testRunner.Then("salvar o projeto com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08 - Um aditivo pode ter mais de um patrocinador")]
        public virtual void _08_UmAditivoPodeTerMaisDeUmPatrocinador()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Um aditivo pode ter mais de um patrocinador", ((string[])(null)));
#line 96
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table21.AddRow(new string[] {
                        "projeto 01"});
#line 97
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table21, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table22.AddRow(new string[] {
                        "patrocinador 01"});
#line 100
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table22, "E ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table23.AddRow(new string[] {
                        "patrocinador 02"});
#line 103
    testRunner.When("houver tentativa de adicionar o(s) patrocinador(es) a seguir:", ((string)(null)), table23, "Quando ");
#line 106
     testRunner.Then("salvar o projeto com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09 - Excluir um aditivo caso não haja despesas reais")]
        public virtual void _09_ExcluirUmAditivoCasoNaoHajaDespesasReais()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Excluir um aditivo caso não haja despesas reais", ((string[])(null)));
#line 109
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10 - Excluir um centro de custo a qualquer momento")]
        public virtual void _10_ExcluirUmCentroDeCustoAQualquerMomento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Excluir um centro de custo a qualquer momento", ((string[])(null)));
#line 112
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table24.AddRow(new string[] {
                        "projeto 01"});
#line 113
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table24, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table25.AddRow(new string[] {
                        "centro de custo 01"});
#line 116
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table25, "E ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table26.AddRow(new string[] {
                        "centro de custo 01"});
#line 119
    testRunner.When("houver tentativa de excluir o(s) centro(s) de custos a seguir:", ((string)(null)), table26, "Quando ");
#line 122
     testRunner.Then("salvar o projeto com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11 - Excluir um patrocinador a qualquer momento")]
        public virtual void _11_ExcluirUmPatrocinadorAQualquerMomento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - Excluir um patrocinador a qualquer momento", ((string[])(null)));
#line 125
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table27.AddRow(new string[] {
                        "projeto 01"});
#line 126
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table27, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table28.AddRow(new string[] {
                        "patrocinador 01"});
#line 129
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table28, "E ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table29.AddRow(new string[] {
                        "patrocinador 01"});
#line 132
    testRunner.When("houver tentativa de excluir o(s) patrocinador(es) a seguir:", ((string)(null)), table29, "Quando ");
#line 135
     testRunner.Then("salvar o projeto com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12 - Exibir rubricas padrões para o primeiro ano do aditivo")]
        public virtual void _12_ExibirRubricasPadroesParaOPrimeiroAnoDoAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12 - Exibir rubricas padrões para o primeiro ano do aditivo", ((string[])(null)));
#line 138
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table30.AddRow(new string[] {
                        "projeto 01"});
#line 139
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table30, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table31.AddRow(new string[] {
                        "aditivo 01",
                        "\"18/06/2013\"",
                        "\"13/11/2013\"",
                        "\"1.000.000,00\""});
#line 142
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table31, "E ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table32.AddRow(new string[] {
                        "centro de custo 01"});
#line 145
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table32, "E ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table33.AddRow(new string[] {
                        "patrocinador 01"});
#line 148
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table33, "E ");
#line 151
    testRunner.When("houver tentativa de carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 152
     testRunner.Then("carregar as rubricas padrões", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13 - Exibir rubricas padrões para o ano escolhido")]
        public virtual void _13_ExibirRubricasPadroesParaOAnoEscolhido()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13 - Exibir rubricas padrões para o ano escolhido", ((string[])(null)));
#line 155
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table34.AddRow(new string[] {
                        "projeto 01"});
#line 157
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table34, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table35.AddRow(new string[] {
                        "aditivo 01",
                        "\"18/06/2013\"",
                        "\"13/11/2014\"",
                        "\"1.000.000,00\""});
#line 160
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table35, "E ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table36.AddRow(new string[] {
                        "centro de custo 01"});
#line 163
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table36, "E ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table37.AddRow(new string[] {
                        "patrocinador 01"});
#line 166
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table37, "E ");
#line 169
    testRunner.When("houver tentativa de carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 170
    testRunner.And("houver tentativa de carregar as rubricas planejadas para o ano \'2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 171
     testRunner.Then("carregar as rubricas para o ano escolhido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14 - Adicionar um gasto planejado para o projeto")]
        public virtual void _14_AdicionarUmGastoPlanejadoParaOProjeto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14 - Adicionar um gasto planejado para o projeto", ((string[])(null)));
#line 173
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table38.AddRow(new string[] {
                        "projeto 01"});
#line 174
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table38, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table39.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 177
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table39, "E ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table40.AddRow(new string[] {
                        "centro de custo 01"});
#line 180
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table40, "E ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table41.AddRow(new string[] {
                        "patrocinador 01"});
#line 183
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table41, "E ");
#line 186
    testRunner.When("carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Total",
                        "Jul",
                        "Ago",
                        "Set",
                        "Out",
                        "Nov"});
            table42.AddRow(new string[] {
                        "\"Viagens e Deslocamentos\"",
                        "\"3.311,00\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\""});
#line 187
    testRunner.And("houver tentativa de adicionar a(s) seguinte(s) rubrica(s) no ano \'2013\':", ((string)(null)), table42, "E ");
#line 190
     testRunner.Then("salvar o projeto com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14 - Redistribuir valor de uma rubrica entre todos os meses do projeto")]
        public virtual void _14_RedistribuirValorDeUmaRubricaEntreTodosOsMesesDoProjeto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14 - Redistribuir valor de uma rubrica entre todos os meses do projeto", ((string[])(null)));
#line 193
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table43.AddRow(new string[] {
                        "projeto 01"});
#line 194
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table43, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table44.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 197
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table44, "E ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table45.AddRow(new string[] {
                        "centro de custo 01"});
#line 200
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table45, "E ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table46.AddRow(new string[] {
                        "patrocinador 01"});
#line 203
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table46, "E ");
#line 206
    testRunner.When("carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Total"});
            table47.AddRow(new string[] {
                        "\"Viagens e Deslocamentos\"",
                        "\"3.311,00\""});
#line 207
    testRunner.And("houver tentativa de redistribuir o valor da(s) seguinte(s) rubrica(s) no ano \'201" +
                    "3\':", ((string)(null)), table47, "E ");
#line 210
     testRunner.Then("o valor por mês deve ser exatamente \'662,20\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15 - Adicionar rubrica acima do valor restante")]
        public virtual void _15_AdicionarRubricaAcimaDoValorRestante()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15 - Adicionar rubrica acima do valor restante", ((string[])(null)));
#line 213
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table48.AddRow(new string[] {
                        "projeto 01"});
#line 215
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table48, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table49.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 218
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table49, "E ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table50.AddRow(new string[] {
                        "centro de custo 01"});
#line 221
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table50, "E ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table51.AddRow(new string[] {
                        "patrocinador 01"});
#line 224
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table51, "E ");
#line 227
    testRunner.When("carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Total"});
            table52.AddRow(new string[] {
                        "\"Viagens e Deslocamentos\"",
                        "\"200.000.000,00\""});
#line 228
    testRunner.And("houver tentativa de adicionar o valor da(s) seguinte(s) rubrica(s) no ano \'2013\':" +
                    "", ((string)(null)), table52, "E ");
#line 231
    testRunner.And("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 232
     testRunner.Then("deve ser exibida o valor restante em vermelho, entre parênteses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16 - Notificar ao adicionar valores que não batam com o total da rubrica")]
        public virtual void _16_NotificarAoAdicionarValoresQueNaoBatamComOTotalDaRubrica()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16 - Notificar ao adicionar valores que não batam com o total da rubrica", ((string[])(null)));
#line 234
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table53.AddRow(new string[] {
                        "projeto 01"});
#line 235
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table53, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table54.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 238
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table54, "E ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table55.AddRow(new string[] {
                        "centro de custo 01"});
#line 241
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table55, "E ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table56.AddRow(new string[] {
                        "patrocinador 01"});
#line 244
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table56, "E ");
#line 247
    testRunner.When("carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Total",
                        "Jul",
                        "Ago",
                        "Set",
                        "Out",
                        "Nov"});
            table57.AddRow(new string[] {
                        "\"Viagens e Deslocamentos\"",
                        "\"3.311,00\"",
                        "\"663,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\""});
#line 248
    testRunner.And("houver tentativa de adicionar o valor da(s) seguinte(s) rubrica(s) no ano \'2013\':" +
                    "", ((string)(null)), table57, "E ");
#line 251
    testRunner.And("houver tentativa de salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "erro normal"});
            table58.AddRow(new string[] {
                        "\"Soma dos meses é diferente do total!\""});
#line 252
     testRunner.Then("deve ser exibida a seguinte mensagem de erro:", ((string)(null)), table58, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17 - Recalcular o Valor Total do planejamento de um aditivo")]
        public virtual void _17_RecalcularOValorTotalDoPlanejamentoDeUmAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17 - Recalcular o Valor Total do planejamento de um aditivo", ((string[])(null)));
#line 257
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table59.AddRow(new string[] {
                        "projeto 01"});
#line 258
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table59, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table60.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 261
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table60, "E ");
#line 264
     testRunner.Then("o valor total listado deverá ser \'1.000.000,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18 - Recalcular o Valor Restante do planejamento de um aditivo")]
        public virtual void _18_RecalcularOValorRestanteDoPlanejamentoDeUmAditivo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18 - Recalcular o Valor Restante do planejamento de um aditivo", ((string[])(null)));
#line 267
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table61.AddRow(new string[] {
                        "projeto 01"});
#line 269
    testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table61, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Início do Projeto",
                        "Término do Projeto",
                        "Orçamento Aprovado"});
            table62.AddRow(new string[] {
                        "aditivo 01",
                        "\"09/07/2013\"",
                        "\"18/11/2013\"",
                        "\"1.000.000,00\""});
#line 272
    testRunner.And("que exista(m) o(s) aditivo(s) a seguir:", ((string)(null)), table62, "E ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table63.AddRow(new string[] {
                        "centro de custo 01"});
#line 275
    testRunner.And("que exista(m) o(s) centro(s) de custos a seguir:", ((string)(null)), table63, "E ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome"});
            table64.AddRow(new string[] {
                        "patrocinador 01"});
#line 278
    testRunner.And("que exista(m) o(s) patrocinador(es) a seguir:", ((string)(null)), table64, "E ");
#line 281
    testRunner.When("carregar os detalhes do aditivo \'aditivo 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "Total",
                        "Jul",
                        "Ago",
                        "Set",
                        "Out",
                        "Nov"});
            table65.AddRow(new string[] {
                        "\"Viagens e Deslocamentos\"",
                        "\"3.311,00\"",
                        "\"663,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\"",
                        "\"662,20\""});
#line 282
    testRunner.And("houver tentativa de adicionar o valor da(s) seguinte(s) rubrica(s) no ano \'2013\':" +
                    "", ((string)(null)), table65, "E ");
#line 285
     testRunner.Then("o valor restante listado deverá ser \'996.689,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
