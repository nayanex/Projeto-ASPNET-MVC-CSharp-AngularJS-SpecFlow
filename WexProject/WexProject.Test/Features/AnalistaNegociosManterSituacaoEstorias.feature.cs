// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ManutencaoDaSituacaoDasEstorias_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AnalistaNegociosManterSituacaoEstorias.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Manutencao da situacao das estorias.", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Manutencao da situacao das estorias.")))
            {
                WexProject.Test.Features.ManutencaoDaSituacaoDasEstorias_Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 - Estoria replanejada em um ciclo e finalizado no ciclo seguinte.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manutencao da situacao das estorias.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("bug")]
        public virtual void _01_EstoriaReplanejadaEmUmCicloEFinalizadoNoCicloSeguinte_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Estoria replanejada em um ciclo e finalizado no ciclo seguinte.", new string[] {
                        "bug"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "tamanho",
                        "total de ciclos",
                        "ritmo do time"});
            table1.AddRow(new string[] {
                        "projeto 01",
                        "30",
                        "3",
                        "10"});
#line 7
 testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table2.AddRow(new string[] {
                        "estória 01",
                        "Replanejado",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table2.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table2.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 10
   testRunner.And("ciclo \'1\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table3.AddRow(new string[] {
                        "estória 01",
                        "Pronto",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table3.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table3.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 15
   testRunner.And("ciclo \'2\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table3, "E ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table4.AddRow(new string[] {
                        "estória 05",
                        "Pronto",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table4.AddRow(new string[] {
                        "estória 06",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
#line 20
   testRunner.And("ciclo \'3\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table4, "E ");
#line 24
 testRunner.When("salvar o ciclo \'2\' do projeto \'projeto 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "quando"});
            table5.AddRow(new string[] {
                        "estória 01",
                        "Pronto",
                        "Ciclo 2"});
            table5.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "Ciclo 1"});
            table5.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "Ciclo 1"});
            table5.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "Ciclo 2"});
            table5.AddRow(new string[] {
                        "estória 05",
                        "Pronto",
                        "Ciclo 3"});
            table5.AddRow(new string[] {
                        "estória 06",
                        "Pronto",
                        "Ciclo 3"});
#line 25
  testRunner.Then("as estorias do projeto \'projeto 01\' devem estar com as seguintes situacoes:", ((string)(null)), table5, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02 - Atualizar estoria replanejadas em um cilco e finalizadas em um ciclo posteri" +
            "or.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manutencao da situacao das estorias.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("bug")]
        public virtual void _02_AtualizarEstoriaReplanejadasEmUmCilcoEFinalizadasEmUmCicloPosterior_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Atualizar estoria replanejadas em um cilco e finalizadas em um ciclo posteri" +
                    "or.", new string[] {
                        "bug"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "tamanho",
                        "total de ciclos",
                        "ritmo do time"});
            table6.AddRow(new string[] {
                        "projeto 01",
                        "30",
                        "3",
                        "10"});
#line 36
 testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table6, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table7.AddRow(new string[] {
                        "estória 01",
                        "Replanejado",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table7.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table7.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 39
   testRunner.And("ciclo \'1\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table7, "E ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table8.AddRow(new string[] {
                        "estória 01",
                        "Pronto",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table8.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table8.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 44
   testRunner.And("ciclo \'2\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table8, "E ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table9.AddRow(new string[] {
                        "estória 05",
                        "EmDesenv",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
#line 49
   testRunner.And("ciclo \'3\' do projeto \'projeto 01\' na situação \'EmAndamento\' com as estórias:", ((string)(null)), table9, "E ");
#line 52
 testRunner.When("alterar a pontuacao da estoria \'estória 01\' do projeto \'projeto 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "quando"});
            table10.AddRow(new string[] {
                        "estória 01",
                        "Pronto",
                        "Ciclo 2"});
            table10.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "Ciclo 1"});
            table10.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "Ciclo 1"});
            table10.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "Ciclo 2"});
            table10.AddRow(new string[] {
                        "estória 05",
                        "EmDesenv",
                        "Ciclo 3"});
#line 53
  testRunner.Then("as estorias do projeto \'projeto 01\' devem estar com as seguintes situacoes:", ((string)(null)), table10, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 - Remover a estória do ciclo.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manutencao da situacao das estorias.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("bug")]
        public virtual void _03_RemoverAEstoriaDoCiclo_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Remover a estória do ciclo.", new string[] {
                        "bug"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "tamanho",
                        "total de ciclos",
                        "ritmo do time"});
            table11.AddRow(new string[] {
                        "projeto 01",
                        "30",
                        "3",
                        "10"});
#line 63
 testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table11, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table12.AddRow(new string[] {
                        "estória 01",
                        "Replanejado",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table12.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table12.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 66
   testRunner.And("ciclo \'1\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table12, "E ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table13.AddRow(new string[] {
                        "estória 01",
                        "EmDesenv",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table13.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table13.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 71
   testRunner.And("ciclo \'2\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table13, "E ");
#line 76
   testRunner.And("ciclo \'3\' do projeto \'projeto 01\' na situação \'NaoPlanejado\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 77
 testRunner.When("remover a estoria \'estória 01\' do ciclo \'2\' do projeto \'projeto 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "quando"});
            table14.AddRow(new string[] {
                        "estória 01",
                        "Replanejado",
                        "P1"});
            table14.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "Ciclo 1"});
            table14.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "Ciclo 1"});
            table14.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "Ciclo 2"});
            table14.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "P2"});
#line 78
  testRunner.Then("as estorias do projeto \'projeto 01\' devem estar com as seguintes situacoes:", ((string)(null)), table14, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 - Remover a estória nao replanejada do ciclo.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Manutencao da situacao das estorias.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("bug")]
        public virtual void _04_RemoverAEstoriaNaoReplanejadaDoCiclo_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Remover a estória nao replanejada do ciclo.", new string[] {
                        "bug"});
#line 87
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "nome",
                        "tamanho",
                        "total de ciclos",
                        "ritmo do time"});
            table15.AddRow(new string[] {
                        "projeto 01",
                        "30",
                        "3",
                        "10"});
#line 88
 testRunner.Given("que exista(m) o(s) projeto(s) a seguir:", ((string)(null)), table15, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table16.AddRow(new string[] {
                        "estória 01",
                        "Replanejado",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table16.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table16.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 91
   testRunner.And("ciclo \'1\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table16, "E ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "pontos",
                        "tipo",
                        "valor do negócio"});
            table17.AddRow(new string[] {
                        "estória 01",
                        "EmDesenv",
                        "5",
                        "EscopoContratado",
                        "Mandatorio"});
            table17.AddRow(new string[] {
                        "estória 04",
                        "Pronto",
                        "3",
                        "EscopoContratado",
                        "Mandatorio"});
            table17.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "2",
                        "EscopoContratado",
                        "Mandatorio"});
#line 96
   testRunner.And("ciclo \'2\' do projeto \'projeto 01\' na situação \'Concluido\' com as estórias:", ((string)(null)), table17, "E ");
#line 101
   testRunner.And("ciclo \'3\' do projeto \'projeto 01\' na situação \'NaoPlanejado\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 102
 testRunner.When("remover a estoria \'estória 04\' do ciclo \'2\' do projeto \'projeto 01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "estória",
                        "situação",
                        "quando"});
            table18.AddRow(new string[] {
                        "estória 01",
                        "Pronto",
                        "Ciclo 2"});
            table18.AddRow(new string[] {
                        "estória 02",
                        "Pronto",
                        "Ciclo 1"});
            table18.AddRow(new string[] {
                        "estória 03",
                        "Pronto",
                        "Ciclo 1"});
            table18.AddRow(new string[] {
                        "estória 04",
                        "NaoIniciado",
                        "P1"});
            table18.AddRow(new string[] {
                        "estória 05",
                        "Replanejado",
                        "P2"});
#line 103
  testRunner.Then("as estorias do projeto \'projeto 01\' devem estar com as seguintes situacoes:", ((string)(null)), table18, "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
