// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.32559
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WexProject.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Gerente de Portifólio ter sugerido automaticamente dados da solicitação de orçame" +
        "nto")]
    [NUnit.Framework.CategoryAttribute("pbi_9.19")]
    public partial class GerenteDePortifolioTerSugeridoAutomaticamenteDadosDaSolicitacaoDeOrcamentoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GerentePortifolioTerSugeridoDadosSolicitacaoOrcamento.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Gerente de Portifólio ter sugerido automaticamente dados da solicitação de orçame" +
                    "nto", "     Como um Gerente de Portfólio\r\n     Eu quero poder ter sugerido automaticamen" +
                    "te dados da solicitação de orçamento\r\n     Para que eu possa facilitar diversos " +
                    "cadastro de Solicitação de Orçamento", ProgrammingLanguage.CSharp, new string[] {
                        "pbi_9.19"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 - Obter a data sugerida para o prazo com 9 dias úteis após a data atual")]
        public virtual void _01_ObterADataSugeridaParaOPrazoCom9DiasUteisAposADataAtual()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Obter a data sugerida para o prazo com 9 dias úteis após a data atual", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
  testRunner.Given("a data atual for \'20/03/2012\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
  testRunner.When("for criado uma nova Solicitação de Orçamento \'seot01\' (codigo \'CLI01.02/2012\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 12
  testRunner.Then("o campo \"Prazo\" da \'CLI01.02/2012\' a ser sugerido deve ser 9 dias úteis após a da" +
                    "ta atual, sendo \'02/04/2012\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 - Sugerir o último cliente utilizado pelo usuário logado")]
        public virtual void _02_SugerirOUltimoClienteUtilizadoPeloUsuarioLogado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Sugerir o último cliente utilizado pelo usuário logado", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
  testRunner.Given("uma empresa com o nome \'Empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Descrição"});
            table1.AddRow(new string[] {
                        "Tipo01"});
#line 16
  testRunner.And("o(a) Tipo(s) de Solicitação de Orçamento com os seguintes valores:", ((string)(null)), table1, "E ");
#line 19
  testRunner.And("ter colaborador(es) \'colaborador01\',\'colaborador02\',\'colaborador03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
  testRunner.And("usuario logado for \'colaborador01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SEOT",
                        "Responsavel",
                        "Situacao",
                        "Cliente",
                        "Codigo",
                        "TipoSolicitacao"});
            table2.AddRow(new string[] {
                        "\'seot01\'",
                        "\'Colaborador1\'",
                        "\'Situacao1\'",
                        "\'Cliente1\'",
                        "\'CLI01.01/2012\'",
                        "Tipo01"});
#line 21
  testRunner.And("a(s) SEOT(s) com os seguintes valor(es):", ((string)(null)), table2, "E ");
#line 24
  testRunner.When("for criado uma nova Solicitação de Orçamento \'seot02\' (codigo \'CLI01.02/2012\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 25
  testRunner.Then("o campo \'Cliente\' deve estar preechido com \'Empresa01\' para a seot \'CLI01.02/2012" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 - Sugerir o último Tipo de Solicitação utilizado pelo usuário logado")]
        public virtual void _03_SugerirOUltimoTipoDeSolicitacaoUtilizadoPeloUsuarioLogado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Sugerir o último Tipo de Solicitação utilizado pelo usuário logado", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Descrição"});
            table3.AddRow(new string[] {
                        "Tipo01"});
#line 28
  testRunner.Given("o(a) Tipo(s) de Solicitação de Orçamento com os seguintes valores:", ((string)(null)), table3, "Dado ");
#line 31
  testRunner.And("uma empresa com o nome \'Empresa01\' e sigla \'emp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
  testRunner.And("ter colaborador(es) \'colaborador01\',\'colaborador02\',\'colaborador03\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
  testRunner.And("usuario logado for \'colaborador01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "SEOT",
                        "Responsavel",
                        "Situacao",
                        "Cliente",
                        "Codigo",
                        "TipoSolicitacao"});
            table4.AddRow(new string[] {
                        "\'seot01\'",
                        "\'Colaborador1\'",
                        "\'Situacao1\'",
                        "\'Cliente1\'",
                        "\'CLI01.01/2012\'",
                        "Tipo01"});
#line 34
  testRunner.And("a(s) SEOT(s) com os seguintes valor(es):", ((string)(null)), table4, "E ");
#line 37
  testRunner.When("for criado uma nova Solicitação de Orçamento \'seot02\' (codigo \'CLI01.02/2012\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 38
  testRunner.Then("o campo \'TipoSolicitacao\' deve estar preechido com \'Tipo01\' para a seot \'CLI01.02" +
                    "/2012\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04 - Quando definir uma situação inicial em configuração de documento trocar a Si" +
            "tuacao Inicial definida como padrão")]
        public virtual void _04_QuandoDefinirUmaSituacaoInicialEmConfiguracaoDeDocumentoTrocarASituacaoInicialDefinidaComoPadrao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Quando definir uma situação inicial em configuração de documento trocar a Si" +
                    "tuacao Inicial definida como padrão", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "documento"});
            table5.AddRow(new string[] {
                        "SolicitacaoOrcamento"});
#line 41
  testRunner.Given("as seguintes configuracoes de documento:", ((string)(null)), table5, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "documento",
                        "situação",
                        "cc",
                        "cco",
                        "padrão?"});
            table6.AddRow(new string[] {
                        "SolicitacaoOrcamento",
                        "Descricao01",
                        "email@email.com.br;emailtwo@email.com.br",
                        "emailtwo@email.com.br;email@email.com.br",
                        "true"});
#line 44
  testRunner.And("as seguintes situacoes de configuracao de documento:", ((string)(null)), table6, "E ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Descrição",
                        "Cor",
                        "SituacaoInicial"});
            table7.AddRow(new string[] {
                        "Descricao02",
                        "255; 255; 0",
                        "true"});
#line 47
  testRunner.When("criar uma nova Configuracao de Documento de Situacao com o(s) seguinte(s) valores" +
                    ":", ((string)(null)), table7, "Quando ");
#line 50
  testRunner.Then("a Configuração de Documento de Situação definida como padrão é \'Descricao02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05 - Sugerir a situação de documento definido como situação inicial")]
        public virtual void _05_SugerirASituacaoDeDocumentoDefinidoComoSituacaoInicial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Sugerir a situação de documento definido como situação inicial", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "documento"});
            table8.AddRow(new string[] {
                        "SolicitacaoOrcamento"});
#line 53
  testRunner.Given("as seguintes configuracoes de documento:", ((string)(null)), table8, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "documento",
                        "situação",
                        "cc",
                        "cco",
                        "padrão?"});
            table9.AddRow(new string[] {
                        "SolicitacaoOrcamento",
                        "Descricao01",
                        "email@email.com.br;emailtwo@email.com.br",
                        "emailtwo@email.com.br;email@email.com.br",
                        "true"});
            table9.AddRow(new string[] {
                        "SolicitacaoOrcamento",
                        "Descricao02",
                        "email@email.com.br",
                        "",
                        "false"});
#line 56
  testRunner.And("as seguintes situacoes de configuracao de documento:", ((string)(null)), table9, "E ");
#line 60
  testRunner.When("for criado uma nova Solicitação de Orçamento \'seot01\' (codigo \'CLI01.01/2012\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 61
  testRunner.Then("o campo \'Situacao\' deve estar preechido com \'Descricao01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
